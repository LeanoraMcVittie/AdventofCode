from typing import List
from math import gcd


# Generated by y21/19/linalg.py
THREE_DIMENSIONAL_ROTATION_MATRICIES = [
	[[1, 0, 0], [0, 1, 0], [0, 0, 1]],
	[[1, 0, 0], [0, -1, 0], [0, 0, -1]],
	[[-1, 0, 0], [0, 1, 0], [0, 0, -1]],
	[[-1, 0, 0], [0, -1, 0], [0, 0, 1]],
	[[1, 0, 0], [0, 0, 1], [0, -1, 0]],
	[[1, 0, 0], [0, 0, -1], [0, 1, 0]],
	[[-1, 0, 0], [0, 0, 1], [0, 1, 0]],
	[[-1, 0, 0], [0, 0, -1], [0, -1, 0]],
	[[0, 1, 0], [1, 0, 0], [0, 0, -1]],
	[[0, 1, 0], [-1, 0, 0], [0, 0, 1]],
	[[0, -1, 0], [1, 0, 0], [0, 0, 1]],
	[[0, -1, 0], [-1, 0, 0], [0, 0, -1]],
	[[0, 1, 0], [0, 0, 1], [1, 0, 0]],
	[[0, 1, 0], [0, 0, -1], [-1, 0, 0]],
	[[0, -1, 0], [0, 0, 1], [-1, 0, 0]],
	[[0, -1, 0], [0, 0, -1], [1, 0, 0]],
	[[0, 0, 1], [1, 0, 0], [0, 1, 0]],
	[[0, 0, 1], [-1, 0, 0], [0, -1, 0]],
	[[0, 0, -1], [1, 0, 0], [0, -1, 0]],
	[[0, 0, -1], [-1, 0, 0], [0, 1, 0]],
	[[0, 0, 1], [0, 1, 0], [-1, 0, 0]],
	[[0, 0, 1], [0, -1, 0], [1, 0, 0]],
	[[0, 0, -1], [0, 1, 0], [1, 0, 0]],
	[[0, 0, -1], [0, -1, 0], [-1, 0, 0]]
]


def product(vals: List[int]) -> int:
	product = 1
	for v in vals:
		product *= v
	return product


def lcm(vals: List[int]) -> int:
	assert len(vals) >= 2
	first = vals[0]
	if len(vals) == 2:
		second = vals[1]
	else:
		second = lcm(vals[1:])
	return int((first * second) / gcd(first, second))
